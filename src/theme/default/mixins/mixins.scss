@charset "UTF-8";

@import "function";
@import "../common/var";

/* ****************************** Break-points ****************************** */
@mixin res($key, $map: $--breakpoints) {
  // 循环断点Map，如果存在则返回
  @if map-has-key($map, $key) {
    @media only screen and #{inspect(map-get($map, $key))} {
      @content;
    }
  } @else {
    @warn "Undefeined points: `#{$map}`";
  }
}

/* ****************************** Scrollbar ****************************** */
@mixin scroll-bar {
  $--scrollbar-thumb-background: #b4bccc;
  $--scrollbar-track-background: #fff;

  &::-webkit-scrollbar {
    z-index: 11;
    width: 6px;

    &:horizontal {
      height: 6px;
    }

    &-thumb {
      border-radius: 5px;
      width: 6px;
      background: $--scrollbar-thumb-background;
    }

    &-corner {
      background: $--scrollbar-track-background;
    }

    &-track {
      background: $--scrollbar-track-background;

      &-piece {
        background: $--scrollbar-track-background;
        width: 6px;
      }
    }
  }
}

/* ****************************** Placeholder ****************************** */
@mixin placeholder {
  &::-webkit-input-placeholder {
    @content
  }

  &::-moz-placeholder {
    @content
  }

  &:-ms-input-placeholder {
    @content
  }
}

/* ****************************** BEM ****************************** */
// 区块
@mixin b($block) {
  $B: $namespace + '-' + $block !global;

  .#{$B} {
    @content;
  }
}

// 元素
@mixin e($element) {
  $currentSelector: & + $element-separator + $element;

  @at-root {
    #{$currentSelector} {
      @content;
    }
  }
}

/// 修饰符，todo 支持多个修饰符列表
@mixin m($modifier) {
  $currentSelector: & + $modifier-separator + $modifier;

  @at-root {
    #{$currentSelector} {
      @content;
    }
  }
}

/* ****************************** 状态修饰 ****************************** */
@mixin when($state) {
  @at-root {
    &.#{$state-prefix + $state} {
      @content;
    }
  }
}
