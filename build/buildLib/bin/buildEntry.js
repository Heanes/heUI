const fs = require('fs');
const path = require('path');
const render = require('json-templater/string');

const defComponents = require('../../../components.js');
const endOfLine = require('os').EOL;
const OUTPUT_PATH = path.join(__dirname, '../../../src/index.js');
const version = process.env.VERSION || require('../../../package.json').version;
const TEMPLATE_COMMENT = '/* Automatically generated by \'./build/bin/build-entry.js\' */';
const TEMPLATE_IMPORT = 'import {{name}} from \'{{pathFile}}\';';
const TEMPLATE_INSTALL_COMPONENT = '  {{name}}';

const defComponentNameList = Object.keys(defComponents);
const importStrList = [];
const componentStrList = [];

// eslint-disable-next-line no-extend-native
String.prototype.toFirstUpperCase = function () {
  return this.replace(/^\S/, function (s) {
    return s.toUpperCase();
  });
};

defComponentNameList.forEach(item => {
  const pathFile = defComponents[item].replace(/^\.\/src/, '.');
  const componentName = item.toFirstUpperCase();

  // import
  const importStr = render(TEMPLATE_IMPORT, {
    name: componentName,
    pathFile: pathFile
  });
  importStrList.push(importStr);

  const componentStr = render(TEMPLATE_INSTALL_COMPONENT, {
    name: componentName
  });
  componentStrList.push(componentStr);
});

const outputStr = `{{TEMPLATE_COMMENT}}

{{importListStr}}

const components = [
{{componentsListStr}}
];

const install = function(Vue, opts = {}) {
  components.forEach(component => {
    Vue.component(component.name, component);
  });
};

if (typeof window !== 'undefined' && window.Vue) {
  install(window.Vue);
}

export default {
  version: '{{version}}',
  install,
{{exportStr}}
}
`;

const indexStr = render(outputStr, {
  version: version,
  TEMPLATE_COMMENT: TEMPLATE_COMMENT,
  importListStr: importStrList.join(endOfLine),
  componentsListStr: componentStrList.join(',' + endOfLine),
  exportStr: componentStrList.join(',' + endOfLine)
});
// 生成index.js
fs.writeFileSync(OUTPUT_PATH, indexStr);
console.log('[build entry] DONE:', OUTPUT_PATH);
